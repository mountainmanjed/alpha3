;==============================================
;Boot up into ram check
;
;Location 91e
;==============================================
EntryPoint:
	move.w #$7000,$fffff0
	move.w #0,$8040a0
	move.w #$807d,$fffff2
	move.w #$2461,$fffff4
	move.w #0,$fffff6
	move.w #$40,$fffff8
	move.w #$10,$fffffa
	move.w #$f00,Epprom_RW
	WATCHDOG
	lea loc_00096c(pc),a4
	bra.w loc_000e32

;==============================================
loc_00096c:
	move.w #$ffc0,$80410c
	move.w #0,$80410e
	move.w #gl_scroll00_pnt,Scroll0_gpuregistera
	move.w #gl_scroll00_pnt,Scroll0_gpuregisterb
	move.w #gl_scroll10_pnt,Scroll1_gpuregister
	move.w #gl_scroll20_pnt,Scroll2_gpuregister
	move.w #gl_rstrb_pnt,raster_gpuregister
	lea loc_0009ac(pc),a4
	bra.w loc_000dd6

loc_0009ac:
	lea loc_0009b4(pc),a4
	bra.w loc_000d7a

loc_0009b4:
	lea loc_0009bc(pc),a4
	bra.w loc_000d8e

loc_0009bc:
	lea loc_0009c4(pc),a4
	bra.w loc_000da2

loc_0009c4:
	move.w #$e,$804122
	move.w #$1b02,$804166
	move.w #$3f,$804170
	move.w #Mainpalette,palette_gpuregister
	lea Mes_workram(pc),a2
	lea loc_0009f0(pc),a5
	bra.w loc_000d28

loc_0009f0:
	lea $ff0000,a0
	lea (a0),a1
	adda.l #$fffe,a1
	lea Mes_workram_ng(pc),a2
	lea loc_000a0a(pc),a6
	bra.w loc_000cb6

loc_000a0a:
	lea Mes_workram_ok(pc),a2
	lea loc_000a16(pc),a5
	bra.w loc_000d28

loc_000a16:
	lea Mes_cps0ram(pc),a2
	lea loc_000a22(pc),a5
	bra.w loc_000d28

loc_000a22:
	lea $900000,a0
	lea (a0),a1
	adda.l #$fffe,a1
	lea Mes_cps0ram_ng(pc),a2
	lea loc_000a3c(pc),a6
	bra.w loc_000cb6

loc_000a3c:
	lea Mes_cps0ram_ok(pc),a2
	lea loc_000a48(pc),a5
	bra.w loc_000d28

loc_000a48:
	lea Mes_cps1ram(pc),a2
	lea loc_000a54(pc),a5
	bra.w loc_000d28

loc_000a54:
	lea $910000,a0
	lea (a0),a1
	adda.l #$fffe,a1
	lea Mes_cps1ram_ng(pc),a2
	lea loc_000a6e(pc),a6
	bra.w loc_000cb6

loc_000a6e:
	lea Mes_cps1ram_ok(pc),a2
	lea loc_000a7a(pc),a5
	bra.w loc_000d28

loc_000a7a:
	lea Mes_cps2ram(pc),a2
	lea loc_000a86(pc),a5
	bra.w loc_000d28

loc_000a86:
	lea $920000,a0
	lea (a0),a1
	adda.l #$fffe,a1
	lea Mes_cps2ram_ng(pc),a2
	lea loc_000aa0(pc),a6
	bra.w loc_000cb6

loc_000aa0:
	lea Mes_cps2ram_ok(pc),a2
	lea loc_000aac(pc),a5
	bra.w loc_000d28

loc_000aac:
	lea Mes_objram(pc),a2
	lea loc_000ab8(pc),a5
	bra.w loc_000d28

loc_000ab8:
	lea ObjectRam,a0
	lea (a0),a1
	adda.l #$1ffe,a1
	lea Mes_objram_ng(pc),a2
	lea loc_000ad2(pc),a6
	bra.w loc_000cb6

loc_000ad2:
	lea Mes_objram_ok(pc),a2
	lea loc_000ade(pc),a5
	bra.w loc_000d28

loc_000ade:
	move.w #$f08,Epprom_RW
	lea Mes_QSRam(pc),a2
	lea loc_000af2(pc),a5
	bra.w loc_000d28

loc_000af2:
	WATCHDOG
	cmpi.b #$77,Sound_END
	bne.b loc_000af2
	lea Soundram,a0
	lea ($1ffe,a0),a1
	lea Mes_QSRam_NG(pc),a2
	lea loc_000b18(pc),a6
	bra.w loc_000ce0

loc_000b18:
	lea Mes_QSRam_OK(pc),a2
	lea loc_000b24(pc),a5
	bra.w loc_000d28

loc_000b24:
	lea loc_000b2c(pc),a4
	bra.w loc_000d5e

loc_000b2c:
	lea loc_000b34(pc),a4
	bra.w loc_000d8e

loc_000b34:
	lea loc_000b3c(pc),a4
	bra.w loc_000da2

loc_000b3c:
	lea loc_000b44(pc),a4
	bra.w loc_000dd6

loc_000b44:
	lea loc_000b4c(pc),a4
	bra.w QSRam_FF_Fill

loc_000b4c:
	lea loc_000b54(pc),a4
	bra.w loc_000db6

loc_000b54:
	WATCHDOG
	moveq #0,d0
	lea $ff8000,a5
	move.w #gl_scroll00_pnt,Scroll0_gpuregistera
	move.w #gl_scroll00_pnt,Scroll0_gpuregisterb
	move.w #gl_scroll10_pnt,Scroll1_gpuregister
	move.w #gl_scroll20_pnt,Scroll2_gpuregister
	move.w #gl_rstrb_pnt,raster_gpuregister
	move.w #Mainpalette,palette_gpuregister
	move.w d0,$804110
	move.w d0,$804112
	move.w d0,$804114
	move.w d0,$804116
	move.w d0,$804120
	move.w #$f,$804122
	move.w #$1b02,$804166
	move.w #$3f,$804170

;Set Sprite Data
	move.w #$7000,$fffff0
	move.w #$807d,$fffff2
	move.w #$2461,$fffff4
	move.w #$40,$fffff8
	move.w #$10,$fffffa

;Set Main Pointers
	move.w #$9000,(gfxram8x8,a5)
	move.w #$9040,(gfxram16x16,a5)
	move.w #$9080,(gfxram32x32,a5)
	move.w #$90e0,(rasterram,a5)
	move.w #Mainpalette,(palrampointer,a5)

;Clear
	move.w d0,($22,a5)
	move.w d0,($24,a5)
	move.w d0,($26,a5)
	move.w d0,($28,a5)
	move.w d0,($2a,a5)
	move.w d0,($2c,a5)
	move.w d0,($2e,a5)
	move.w #$f,($30,a5)
	move.w #$1b02,($32,a5)
	move.w #$3f,($34,a5)
	move.w #$7000,($36,a5)
	move.w #$807d,($38,a5)
	move.w #$2461,($3a,a5)
	move.w #$40,($3c,a5)
	move.w #$10,($3e,a5)
	move.w #$f08,Epprom_RW
	move.w #$f00,($6a,a5)
	move.b #$8,($88,a5)
	move.b #0,($d1,a5)

;Set Secondary
	move.w #$9000,($40,a5)
	move.w #$9040,($42,a5)
	move.w #$9080,($44,a5)
	move.w #$90e0,($46,a5)
	move.w #Mainpalette,(sub_palram,a5)
	move.w d0,($4a,a5)
	move.w d0,($4c,a5)
	move.w d0,($4e,a5)
	move.w d0,($50,a5)
	move.w d0,($52,a5)
	move.w d0,($54,a5)
	WATCHDOG
	jmp loc_000f7a

;----------------------------------------------
;memory_check read
loc_000cb6:
	movea.l a0,a3
	move.w #1,d1
	moveq #0,d3

loc_000cbe:
	move.l loc_000d1c(pc,d3.w),d0
	lea (a3),a0

loc_000cc4:
	WATCHDOG
	move.l (a0),d2
	move.l d0,(a0)
	cmp.l (a0),d0
	bne.b loc_000d0c
	move.l d2,(a0)+
	cmpa.l a1,a0
	bls.b loc_000cc4
	addq.w #4,d3
	dbra d1,loc_000cbe
	jmp (a6)

;==============================================
loc_000ce0:
	movea.l a0,a3

loc_000ce2:
	move.w #1,d1
	moveq #0,d3

loc_000ce8:
	move.w loc_000d24(pc,d3.w),d0
	lea (a3),a0

loc_000cee:
	WATCHDOG
	move.w d0,(a0)
	cmp.b (1,a0),d0
	bne.b loc_000d0c
	lea (2,a0),a0
	cmpa.l a1,a0
	bls.b loc_000cee
	addq.w #2,d3
	dbra d1,loc_000ce8
	jmp (a6)

;==============================================
loc_000d0c:
	lea loc_000d14(pc),a5
	bra.w loc_000d28

loc_000d14:
	WATCHDOG
	bra.b loc_000d14

;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
loc_000d1c:
	dc.l $00000000,$ffffffff

loc_000d24:
	dc.w $0000,$5555

;==============================================
loc_000d28:
	lea (a2),a0
	moveq #0,d0
	move.b (a0)+,d0
	lsl.w #7,d0
	add.b (a0)+,d0
	movea.l #$900000,a1
	lea (a1,d0.w),a1
	moveq #0,d1
	move.b (a0)+,d1

loc_000d40:
	moveq #0,d0
	move.b (a0)+,d0
	beq.b loc_000d5c
	WATCHDOG
	addi.w #0,d0
	move.w d0,(a1)
	move.w d1,(2,a1)
	lea ($80,a1),a1
	bra.b loc_000d40

loc_000d5c:
	jmp (a5)

;==============================================
loc_000d5e:
	lea $ff0000,a0
	move.w #$1ffd,d4
	moveq #0,d0

loc_000d6a:
	WATCHDOG
	move.l d0,(a0)+
	move.l d0,(a0)+
	dbra d4,loc_000d6a
	jmp (a4)

;==============================================
loc_000d7a:
	lea $900000,a0
	lea $903fff,a1
	move.w #$20,d0
	moveq #0,d1
	bra.b loc_000dc6

loc_000d8e:
	lea $904000,a0
	lea $907fff,a1
	move.w #$6c20,d0
	moveq #0,d1
	bra.b loc_000dc6

loc_000da2:
	lea $908000,a0
	lea $90bfff,a1
	move.w #$b00,d0
	moveq #0,d1
	bra.b loc_000dc6

loc_000db6:
	lea $910000,a0
	lea $92ffff,a1
	moveq #0,d0
	moveq #0,d1

loc_000dc6:
	WATCHDOG
	move.w d0,(a0)+
	move.w d1,(a0)+
	cmpa.l a1,a0
	bls.b loc_000dc6
	jmp (a4)

;==============================================
loc_000dd6:
	moveq #0,d0
	move.w #0,OBJram_Bank0
	lea ObjectRam,a0
	move.w #$7ff,d7

loc_000dea:
	WATCHDOG
	move.l d0,(a0)+
	dbra d7,loc_000dea
	move.w #1,OBJram_Bank0
	lea ObjectRam,a0
	move.w #$7ff,d7

loc_000e08:
	WATCHDOG
	move.l d0,(a0)+
	dbra d7,loc_000e08
	jmp (a4)

;==============================================
QSRam_FF_Fill:
	lea Soundram,a0
	lea Sound_Test_end,a1
	moveq #-1,d0

QSRam_FF_Fill_Repeat:
	WATCHDOG
	move.w d0,(a0)+
	cmpa.l a1,a0
	bls.b QSRam_FF_Fill_Repeat
	jmp (a4)

;==============================================
loc_000e32:
	movea.l #loc_33c4b4,a0
	lea $90c400,a1
	lea loc_000e46(pc),a2
	bra.w loc_000e98

loc_000e46:
	movea.l #loc_340994,a0
	lea $90c800,a1
	lea loc_000e5a(pc),a2
	bra.w loc_000e98

loc_000e5a:
	movea.l #loc_3477f4,a0
	lea $90cc00,a1
	lea loc_000e6e(pc),a2
	bra.w loc_000e98

loc_000e6e:
	movea.l #loc_33bc74,a0
	lea $90d000,a1
	lea loc_000e82(pc),a2
	bra.w loc_000e98

loc_000e82:
	movea.l #loc_33bc74,a0
	lea $90d400,a1
	lea loc_000e96(pc),a2
	bra.w loc_000e98

loc_000e96:
	jmp (a4)

;==============================================
loc_000e98:
	moveq #$1f,d7
	move.l #$f000f000,d0

loc_000ea0:
	WATCHDOG
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	move.l (a0)+,(a1)
	or.l d0,(a1)+
	dbra d7,loc_000ea0
	jmp (a2)

;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
Mes_workram:
	dc.b $11,$30,$00
	dc.b 'WORK',$00

Mes_workram_ng:
	dc.b $1a,$30,$00
	dc.b 'RAM NG',$00

Mes_workram_ok:
	dc.b $1a,$30,$00
	dc.b 'RAM OK',$00

Mes_cps0ram:
	dc.b $11,$38,$00
	dc.b 'CPS0',$00

Mes_cps0ram_ng:
	dc.b $1a,$38,$00
	dc.b 'RAM NG',$00

Mes_cps0ram_ok:
	dc.b $1a,$38,$00
	dc.b 'RAM OK',$00

Mes_cps1ram:
	dc.b $11,$40,$00
	dc.b 'CPS1',$00

Mes_cps1ram_ng:
	dc.b $1a,$40,$00
	dc.b 'RAM NG',$00

Mes_cps1ram_ok:
	dc.b $1a,$40,$00
	dc.b 'RAM OK',$00

Mes_cps2ram:
	dc.b $11,$48,$00
	dc.b 'CPS2',$00

Mes_cps2ram_ng:
	dc.b $1a,$48,$00
	dc.b 'RAM NG',$00

Mes_cps2ram_ok:
	dc.b $1a,$48,$00
	dc.b 'RAM OK',$00

Mes_objram:
	dc.b $11,$50,$00
	dc.b 'OBJECT',$00

Mes_objram_ng:
	dc.b $1a,$50,$00
	dc.b 'RAM NG',$00

Mes_objram_ok:
	dc.b $1a,$50,$00
	dc.b 'RAM OK',$00

Mes_QSRam:
	dc.b $11,$58,$00
	dc.b 'Q SOUND',$00

Mes_QSRam_NG:
	dc.b $1a,$58,$00
	dc.b 'RAM NG',$00

Mes_QSRam_OK:
	dc.b $1a,$58,$00
	dc.b 'RAM OK',$00
	even
